{"version":3,"sources":["components/AddTask.js","components/TaskTableRow.js","components/TaskTable.js","components/EditTask.js","api/FakeTasksApi.js","reducers/index.js","components/SearchTask.js","components/TaskList.js","actions/index.js","components/Header.js","components/UserGreeting.js","components/AuthApp.js"],"names":["validate","values","errors","name","length","AddTask","addTask","minDate","Date","toISOString","slice","formik","useFormik","initialValues","priority","date","done","finishDate","onSubmit","resetForm","handleSubmit","className","id","type","onChange","handleChange","onBlur","handleBlur","value","placeholder","htmlFor","TaskTableRow","index","task","onDone","onEdit","onDelete","isFinished","style","textDecoration","backgroundColor","color","onClick","disabled","icon","faEdit","faTrash","TaskTable","tasks","del","edit","map","key","EditTask","update","findIndexByAnId","result","findIndex","Error","FakeTasksApi","getAllTasks","wait","taskToAdd","addedTask","uuidv4","push","replaceTask","taskToReplace","replacedTask","finishTask","taskToFinish","finishedTask","removeTask","taskToRemove","splice","getTasksByFullTextSearch","searchQuery","initialState","loading","error","tasksReducer","state","action","filter","toLowerCase","includes","removedTask","completedTask","payload","SearchTask","search","onInput","TaskList","useReducer","undefined","dispatch","useEffect","TasksAPI","then","setTasks","catch","setError","finally","handleEditTask","updatedTask","taskToUpdate","e","target","searchInput","console","log","taskToComplete","Header","children","UserGreeting","token","onLogout","accessToken","useContext","AuthContext","jwt","decode","email","href","AuthApp"],"mappings":"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","file":"static/js/4.c3ee09f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useFormik } from 'formik';\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.name) {\r\n    errors.name = 'Required';\r\n  } else if (values.name.length < 3) {\r\n    errors.name = 'Must have min 3 characters';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst AddTask = ({ addTask }) => {\r\n  const minDate = new Date().toISOString().slice(0, 10);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      priority: '',\r\n      date: minDate,\r\n      done: false,\r\n      finishDate: null,\r\n    },\r\n    validate,\r\n    onSubmit: (values, { resetForm }) => {\r\n      addTask(values);\r\n      resetForm();\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.name}\r\n            className=\"form-control\"\r\n            placeholder=\"add task\"\r\n          />\r\n          {formik.errors.name ? (\r\n            <div className=\"alert alert-danger\">{formik.errors.name}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-group form-check\">\r\n          <input\r\n            id=\"priority\"\r\n            name=\"priority\"\r\n            type=\"checkbox\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.priority}\r\n            className=\"form-check-input\"\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"priority\">\r\n            priorytet\r\n          </label>\r\n        </div>\r\n        <button className=\"btn btn-block btn-outline-warning\" type=\"submit\">\r\n          Dodaj\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction TaskTableRow({ index, task, onDone, onEdit, onDelete }) {\r\n  const { name, done, finishDate, priority, date } = task;\r\n  const isFinished = done;\r\n  const style = {};\r\n  if (done) {\r\n    style.textDecoration = 'line-through';\r\n    style.backgroundColor = 'orange';\r\n  }\r\n  if (priority) {\r\n    style.color = 'red';\r\n  }\r\n  return (\r\n    <tr style={style}>\r\n      {/* {onEdit ? 'hvihi' : ''} */}\r\n      <td>{index + 1}</td>\r\n      <td onClick={onDone}>{name}</td>\r\n      <td>{!done ? date : finishDate}</td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-sm btn-outline-secondary mr-1\"\r\n          onClick={onEdit}\r\n          disabled={isFinished}\r\n        >\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </button>\r\n        <button className=\"btn btn-sm btn-outline-danger\" onClick={onDelete}>\r\n          <FontAwesomeIcon icon={faTrash} />\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\nexport default TaskTableRow;\r\n","import React from 'react';\r\nimport TaskTableRow from './TaskTableRow';\r\n\r\nfunction TaskTable({ tasks, del, done, edit }) {\r\n  return (\r\n    <table className=\"table table-info table-hover table-striped table-responsive{-sm|-md|-lg|-xl}\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>task name</th>\r\n          <th>date</th>\r\n          <th>edit / del</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {tasks.map((task, index) => (\r\n          <TaskTableRow\r\n            key={task.id}\r\n            index={index}\r\n            task={task}\r\n            onDelete={() => del(task)}\r\n            onDone={() => done(task)}\r\n            onEdit={() => edit(task)}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TaskTable;\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.name) {\r\n    errors.name = 'Required';\r\n  } else if (values.name.length < 3) {\r\n    errors.name = 'Must have min 3 characters';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst EditTask = ({ update, edit, task }) => {\r\n  const { name } = task;\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name,\r\n    },\r\n    validate,\r\n    onSubmit: ({ name }) => {\r\n      update({ ...task, name });\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"jumbotron bg-dark text-white\">\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.name}\r\n            className=\"form-control\"\r\n          />\r\n          {formik.errors.name ? (\r\n            <div className=\"alert alert-danger\">{formik.errors.name}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-block btn-outline-warning\" type=\"submit\">\r\n            Edytuj\r\n          </button>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-block btn-outline-danger\" onClick={edit}>\r\n            cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { wait } from './wait';\r\n\r\nconst tasks = [\r\n  {\r\n    id: 1,\r\n    date: '2020-02-03',\r\n    done: false,\r\n    finishDate: null,\r\n    name: 'nauczyć się js es 6',\r\n    priority: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    date: '2020-02-04',\r\n    done: false,\r\n    finishDate: null,\r\n    name: 'nauczyć się biblioteki axios',\r\n    priority: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    date: '2020-03-03',\r\n    done: false,\r\n    finishDate: null,\r\n    name: 'zainstalować linuxa',\r\n    priority: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    date: '2020-04-09',\r\n    done: false,\r\n    finishDate: null,\r\n    name: 'zrobić api w laravelu',\r\n    priority: false,\r\n  },\r\n];\r\n\r\nfunction findIndexByAnId(id) {\r\n  const result = tasks.findIndex((task) => task.id === id);\r\n  if (result < 0) {\r\n    throw new Error('task o podanym id nie istnieje');\r\n  }\r\n  return result;\r\n}\r\n\r\nconst FakeTasksApi = {\r\n  async getAllTasks() {\r\n    await wait(200);\r\n    return [...tasks];\r\n  },\r\n  async addTask(taskToAdd) {\r\n    await wait(200);\r\n    const addedTask = { id: uuidv4(), ...taskToAdd };\r\n    tasks.push(addedTask);\r\n\r\n    return addedTask;\r\n  },\r\n  async replaceTask(taskToReplace) {\r\n    await wait(200);\r\n    if (!taskToReplace.id) {\r\n      throw new Error('task has to have an id to be updated');\r\n    }\r\n    const index = findIndexByAnId(taskToReplace.id);\r\n    const replacedTask = { ...taskToReplace };\r\n    tasks[index] = replacedTask;\r\n    return replacedTask;\r\n  },\r\n  async finishTask(taskToFinish) {\r\n    await wait(200);\r\n    if (!taskToFinish.id) {\r\n      throw new Error('task has to have an id to be finished');\r\n    }\r\n\r\n    const finishedTask = {\r\n      ...taskToFinish,\r\n      done: !taskToFinish.done,\r\n      finishDate: taskToFinish.done ? new Date().toISOString().slice(0, 10) : null,\r\n    };\r\n    const index = findIndexByAnId(taskToFinish.id);\r\n    tasks[index] = finishedTask;\r\n    return finishedTask;\r\n  },\r\n  async removeTask(taskToRemove) {\r\n    await wait(200);\r\n    if (!taskToRemove.id) {\r\n      throw new Error('task has to have an id to be deleted');\r\n    }\r\n\r\n    const index = findIndexByAnId(taskToRemove.id);\r\n    tasks.splice(index, 1);\r\n  },\r\n  async getTasksByFullTextSearch(searchQuery) {\r\n    await wait(200);\r\n    return searchQuery;\r\n  },\r\n};\r\n\r\nexport default FakeTasksApi;\r\n","const initialState = {\r\n  tasks: [],\r\n  searchQuery: '',\r\n  edit: false,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\nexport const tasksReducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case 'SET_TASKS': {\r\n      const { tasks } = action;\r\n      return { ...state, tasks };\r\n    }\r\n    case 'SEARCH_TASK': {\r\n      const tasks = state.tasks.filter(({ name }) =>\r\n        name.toLowerCase().includes(state.searchQuery),\r\n      );\r\n      return { ...state, tasks };\r\n    }\r\n    case 'ADD_TASK': {\r\n      const { task } = action;\r\n      const tasks = [...state.tasks, task];\r\n      return { ...state, tasks };\r\n    }\r\n    case 'REPLACE_TASK': {\r\n      const { replacedTask } = action;\r\n      const tasks = state.tasks.map((task) => (task.id === replacedTask.id ? replacedTask : task));\r\n      return { ...state, tasks, edit: false };\r\n    }\r\n    case 'DELETE_TASK': {\r\n      const { removedTask } = action;\r\n      const tasks = state.tasks.filter((task) => task.id !== removedTask.id);\r\n      return { ...state, tasks };\r\n    }\r\n    case 'TASK_EDIT_START': {\r\n      const task = { action };\r\n      return { ...state, task, edit: !state.edit };\r\n    }\r\n    case 'COMPLETE_TASK': {\r\n      const { completedTask } = action;\r\n      const tasks = state.tasks.map((task) => {\r\n        if (task.id === completedTask.id) {\r\n          task.done = !task.done;\r\n          task.finishDate = task.done ? new Date().toISOString().slice(0, 10) : null;\r\n        }\r\n        return task;\r\n      });\r\n      return { ...state, tasks };\r\n    }\r\n    case 'SET_ERROR': {\r\n      const { error } = action;\r\n      return { ...state, error };\r\n    }\r\n    case 'LOADING': {\r\n      return { ...state, loading: false };\r\n    }\r\n    case 'SEARCH_INPUT': {\r\n      const { payload } = action;\r\n      return {\r\n        ...state,\r\n        searchQuery: payload,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nfunction SearchTask({search}) {\r\n  return (\r\n      <div className=\"form-group mt-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"search task\"\r\n          className=\"form-control\"\r\n          onInput={search}\r\n        />\r\n      </div>\r\n  );\r\n}\r\nexport default SearchTask;\r\n","import React, { useReducer, useEffect } from 'react';\r\n// import AuthContext from '../context/AuthContext';\r\nimport AddTask from './AddTask';\r\nimport TaskTable from './TaskTable';\r\nimport EditTask from './EditTask';\r\nimport TasksAPI from '../api/FakeTasksApi';\r\nimport { tasksReducer } from '../reducers';\r\nimport {\r\n  setTasks,\r\n  setError,\r\n  loadingIndicator,\r\n  deleteTask,\r\n  addTask,\r\n  replaceTask,\r\n  searchInput,\r\n  searchTask,\r\n} from '../actions';\r\n\r\nimport SearchTask from './SearchTask';\r\n\r\nfunction TaskList() {\r\n  const [state, dispatch] = useReducer(tasksReducer, undefined, tasksReducer);\r\n  // const { accessToken } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    TasksAPI.getAllTasks()\r\n      .then((tasks) => dispatch(setTasks(tasks)))\r\n      .catch((error) => dispatch(setError(error)))\r\n      .finally(() => dispatch(loadingIndicator()));\r\n    TasksAPI.getTasksByFullTextSearch(state.searchQuery).then(() => {\r\n      dispatch(searchTask());\r\n    });\r\n  }, [state.searchQuery]);\r\n\r\n  const removeTask = (taskToRemove) => {\r\n    TasksAPI.removeTask(taskToRemove).then(() => dispatch(deleteTask(taskToRemove)));\r\n  };\r\n\r\n  const handleCreate = (task) => {\r\n    try {\r\n      TasksAPI.addTask(task).then((addedTask) => dispatch(addTask(addedTask)));\r\n    } catch (error) {\r\n      console.log('Jest błąd przy tworzeniu taska:', error);\r\n    }\r\n  };\r\n\r\n  const handleEditTask = (task) => {\r\n    dispatch({ type: 'TASK_EDIT_START', task });\r\n  };\r\n\r\n  const handleDoneTask = (taskToComplete) => {\r\n    TasksAPI.finishTask(taskToComplete).then(() =>\r\n      dispatch({ type: 'COMPLETE_TASK', completedTask: taskToComplete }),\r\n    );\r\n  };\r\n\r\n  const { tasks, edit, error, loading } = state;\r\n\r\n  return (\r\n    <>\r\n      {edit ? (\r\n        <EditTask\r\n          task={state.task.action.task}\r\n          update={(updatedTask) => {\r\n            const taskToUpdate = { ...state.task, ...updatedTask };\r\n            TasksAPI.replaceTask(taskToUpdate).then((replacedTask) =>\r\n              dispatch(replaceTask(replacedTask)),\r\n            );\r\n          }}\r\n          edit={handleEditTask}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className=\"jumbotron bg-dark text-white col-{-sm|-md|-lg|-xl}\">\r\n            <SearchTask search={(e) => dispatch(searchInput(e))} />\r\n            <AddTask addTask={handleCreate} />            \r\n          </div>\r\n          {error ? 'Nie udało się załadować :(' : null}\r\n          {loading ? 'taski się ładują...' : null}\r\n\r\n          <TaskTable\r\n            loading={loading}\r\n            tasks={tasks}\r\n            del={removeTask}\r\n            done={handleDoneTask}\r\n            edit={handleEditTask}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","export const setTasks = (tasks) => ({ type: \"SET_TASKS\", tasks });\r\nexport const addTask = (task) => ({ type: \"ADD_TASK\", task });\r\nexport const setError = (error) => ({ type: \"SET_ERROR\", error });\r\nexport const deleteTask = (removedTask) => ({\r\n  type: \"DELETE_TASK\",\r\n  removedTask,\r\n});\r\nexport const loadingIndicator = () => ({ type: \"LOADING\" });\r\nexport const replaceTask = (replacedTask) => ({\r\n  type: \"REPLACE_TASK\",\r\n  replacedTask,\r\n});\r\nexport const searchInput = (e) => ({\r\n  type: \"SEARCH_INPUT\",\r\n  payload: e.target.value.toLowerCase(),\r\n});\r\nexport const searchTask = () => ({\r\n  type: \"SEARCH_TASK\",\r\n});\r\n","import React from 'react';\r\n\r\nfunction Header({ children }) {\r\n  if (children.length < 1) {\r\n    throw new Error('Header has to have at least one child!');\r\n  }\r\n  return <header className=\"card bg-warning text-white\">{children}</header>;\r\n}\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nfunction UserGreeting({ onLogout }) {\r\n  const { accessToken } = useContext(AuthContext);\r\n  return (\r\n    <>\r\n      {accessToken ? (\r\n        <>\r\n          <div className=\"card-body\">\r\n            <h3 className=\"card-title text-center\">TASKS LIST</h3>\r\n            <p className=\"card-text text-right\">\r\n              Witaj {getUserEmail(accessToken)} /\r\n              <a href=\"#\" className=\"\" onClick={onLogout}>\r\n                wyloguj się\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserGreeting;\r\n\r\nfunction getUserEmail(token) {\r\n  const decodedToken = jwt.decode(token);\r\n  return decodedToken.email;\r\n}\r\n","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport Header from './Header';\r\nimport UserGreeting from './UserGreeting';\r\n\r\nfunction AuthApp({ onLogout }) {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <UserGreeting onLogout={onLogout} />\r\n      </Header>\r\n      <TaskList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthApp;\r\n"],"sourceRoot":""}