{"version":3,"sources":["components/Checkbox.js","components/AddTask.js","components/EditTask.js","components/TaskTableRow.js","components/TaskTable.js","api/FakeTasksApi.js","reducers/index.js","components/SearchTask.js","components/TaskList.js","actions/index.js","components/Header.js","components/UserGreeting.js","components/AuthApp.js"],"names":["Checkbox","props","type","style","marginLeft","text","validate","values","errors","name","length","AddTask","addTask","onCancel","minDate","Date","toISOString","slice","formik","useFormik","initialValues","priority","date","done","finishDate","onSubmit","resetForm","handleSubmit","Input","onChange","handleChange","onBlur","handleBlur","value","placeholder","className","onClick","EditTask","update","task","cancelEdit","index","margin","fontSize","icon","faPen","faWindowClose","TaskTableRow","onDone","onEdit","onDelete","onUpdate","editMode","currentEditTask","isFinished","textDecoration","backgroundColor","color","id","disabled","faEdit","faTrash","TaskTable","tasks","del","edit","map","key","findIndexByAnId","result","findIndex","Error","FakeTasksApi","getAllTasks","wait","taskToAdd","addedTask","uuidv4","push","replaceTask","taskToReplace","replacedTask","finishTask","taskToFinish","finishedTask","removeTask","taskToRemove","splice","getTasksByFullTextSearch","searchQuery","initialState","loading","error","create","tasksReducer","state","action","filter","toLowerCase","includes","removedTask","completedTask","payload","SearchTask","search","onInput","TaskList","useReducer","undefined","dispatch","useEffect","TasksAPI","then","setTasks","catch","setError","finally","console","log","e","target","searchInput","faPlus","taskToComplete","taskEditStart","updatedTask","taskToUpdate","Header","children","UserGreeting","token","onLogout","accessToken","useContext","AuthContext","jwt","decode","email","href","AuthApp"],"mappings":"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","file":"static/js/4.295a5fe0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Checkbox = (props) => {\n  return (\n    <div>\n      <label>\n        <input type=\"checkbox\" {...props} />\n        <span style={{ marginLeft: 12 }}>{props.text}</span>\n      </label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport Checkbox from './Checkbox';\nimport Input from './Input';\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Required';\n  } else if (values.name.length < 3) {\n    errors.name = 'Must have min 3 characters';\n  }\n\n  return errors;\n};\n\nconst AddTask = ({ addTask, onCancel }) => {\n  const minDate = new Date().toISOString().slice(0, 10);\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      priority: false,\n      date: minDate,\n      done: false,\n      finishDate: null,\n    },\n    validate,\n    onSubmit: (values, { resetForm }) => {\n      addTask(values);\n      resetForm();\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Input\n        name=\"name\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.name}\n        placeholder=\"add task\"\n      />\n\n      {formik.errors.name ? <div className=\"text text-danger\">{formik.errors.name}</div> : null}\n\n      <Checkbox\n        text=\"priorytet\"\n        name=\"priority\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.priority}\n      />\n\n      <button className=\"btn btn-block btn-outline-warning\" type=\"submit\">\n        Dodaj\n      </button>\n      <button className=\"btn btn-block btn-outline-danger\" onClick={onCancel}>\n        Anuluj\n      </button>\n    </form>\n  );\n};\n\nexport default AddTask;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = 'Required';\n  } else if (values.name.length < 3) {\n    errors.name = 'Must have min 3 characters';\n  }\n  return errors;\n};\n\nconst EditTask = ({ update, task, cancelEdit, index }) => {\n  const { name } = task;\n  const formik = useFormik({\n    initialValues: {\n      name,\n    },\n    validate,\n    onSubmit: ({ name }) => {\n      update({ ...task, name });\n    },\n  });\n  return (\n    <>\n      <td>{index + 1}</td>\n      <td>\n        <input\n          name=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          className=\"form-control\"\n          style={{ margin: 0, fontSize: '1em' }}\n        />\n        {formik.errors.name ? <div className=\"text text-danger\">{formik.errors.name}</div> : null}\n      </td>\n      <td />\n      <td>\n        <button className=\"btn btn-outline-warning\" type=\"submit\" onClick={formik.handleSubmit}>\n          <FontAwesomeIcon icon={faPen} />\n        </button>\n\n        <button className=\"btn btn-outline-danger\" onClick={cancelEdit}>\n          <FontAwesomeIcon icon={faWindowClose} />\n        </button>\n      </td>\n    </>\n  );\n};\n\nexport default EditTask;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport EditTask from './EditTask';\n\nfunction TaskTableRow({\n  index,\n  task,\n  onDone,\n  onEdit,\n  onDelete,\n  onUpdate,\n  editMode,\n  currentEditTask,\n  cancelEdit,\n}) {\n  const { name, done, finishDate, priority, date } = task;\n  const isFinished = done;\n  const style = {};\n  if (done) {\n    style.textDecoration = 'line-through';\n    style.backgroundColor = 'orange';\n  }\n  if (priority) {\n    style.color = 'red';\n  }\n\n  return (\n    <tr style={style}>\n      {task.id === currentEditTask ? (\n        <EditTask update={onUpdate} task={task} cancelEdit={cancelEdit} index={index} />\n      ) : (\n        <>\n          <td>{index + 1}</td>\n          <td onClick={onDone}>{name}</td>\n          <td>{!done ? date : finishDate}</td>\n          <td>\n            <button\n              className=\"btn btn-sm btn-outline-secondary mr-1\"\n              onClick={onEdit}\n              disabled={isFinished || editMode}\n            >\n              <FontAwesomeIcon icon={faEdit} />\n            </button>\n            <button\n              className=\"btn btn-sm btn-outline-danger\"\n              onClick={onDelete}\n              disabled={editMode}\n            >\n              <FontAwesomeIcon icon={faTrash} />\n            </button>\n          </td>{' '}\n        </>\n      )}\n    </tr>\n  );\n}\nexport default TaskTableRow;\n","import React from 'react';\nimport TaskTableRow from './TaskTableRow';\n\nfunction TaskTable({ tasks, del, done, edit, editMode, onUpdate, currentEditTask, cancelEdit }) {\n  return (\n    <table className=\"table table-info table-hover table-striped table-responsive{-sm|-md|-lg|-xl}\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>task name</th>\n          <th>date</th>\n          <th>edit / del</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tasks.map((task, index) => (\n          <TaskTableRow\n            key={task.id}\n            index={index}\n            task={task}\n            onDelete={() => del(task)}\n            onDone={() => done(task)}\n            onEdit={() => edit(task)}\n            cancelEdit={cancelEdit}\n            editMode={editMode}\n            onUpdate={onUpdate}\n            currentEditTask={currentEditTask}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TaskTable;\n","import { v4 as uuidv4 } from 'uuid';\nimport { wait } from './wait';\n\nconst tasks = [\n  {\n    id: 1,\n    date: '2020-02-03',\n    done: false,\n    finishDate: null,\n    name: 'nauczyć się js es 6',\n    priority: false,\n  },\n  {\n    id: 2,\n    date: '2020-02-04',\n    done: false,\n    finishDate: null,\n    name: 'nauczyć się biblioteki axios',\n    priority: true,\n  },\n  {\n    id: 3,\n    date: '2020-03-03',\n    done: false,\n    finishDate: null,\n    name: 'zainstalować linuxa',\n    priority: false,\n  },\n  {\n    id: 4,\n    date: '2020-04-09',\n    done: false,\n    finishDate: null,\n    name: 'zrobić api w laravelu',\n    priority: false,\n  },\n];\n\nfunction findIndexByAnId(id) {\n  const result = tasks.findIndex((task) => task.id === id);\n  if (result < 0) {\n    throw new Error('task o podanym id nie istnieje');\n  }\n  return result;\n}\n\nconst FakeTasksApi = {\n  async getAllTasks() {\n    await wait(200);\n    return [...tasks];\n  },\n  async addTask(taskToAdd) {\n    await wait(200);\n    const addedTask = { id: uuidv4(), ...taskToAdd };\n    tasks.push(addedTask);\n\n    return addedTask;\n  },\n  async replaceTask(taskToReplace) {\n    await wait(200);\n    if (!taskToReplace.id) {\n      throw new Error('task has to have an id to be updated');\n    }\n    const index = findIndexByAnId(taskToReplace.id);\n    const replacedTask = { ...taskToReplace };\n    tasks[index] = replacedTask;\n    return replacedTask;\n  },\n  async finishTask(taskToFinish) {\n    await wait(200);\n    if (!taskToFinish.id) {\n      throw new Error('task has to have an id to be finished');\n    }\n\n    const finishedTask = {\n      ...taskToFinish,\n      done: !taskToFinish.done,\n      finishDate: taskToFinish.done ? new Date().toISOString().slice(0, 10) : null,\n    };\n    const index = findIndexByAnId(taskToFinish.id);\n    tasks[index] = finishedTask;\n    return finishedTask;\n  },\n  async removeTask(taskToRemove) {\n    await wait(200);\n    if (!taskToRemove.id) {\n      throw new Error('task has to have an id to be deleted');\n    }\n\n    const index = findIndexByAnId(taskToRemove.id);\n    tasks.splice(index, 1);\n  },\n  async getTasksByFullTextSearch(searchQuery) {\n    await wait(200);\n    return searchQuery;\n  },\n};\n\nexport default FakeTasksApi;\n","const initialState = {\n  tasks: [],\n  searchQuery: '',\n  editMode: false,\n  loading: true,\n  error: null,\n  currentEditTask: null,\n  create: false,\n};\n\nexport const tasksReducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case 'SET_TASKS': {\n      const { tasks } = action;\n      return { ...state, tasks };\n    }\n    case 'SEARCH_TASK': {\n      const tasks = state.tasks.filter(({ name }) =>\n        name.toLowerCase().includes(state.searchQuery),\n      );\n      return { ...state, tasks };\n    }\n    case 'ADD_TASK': {\n      const { task } = action;\n      const tasks = [...state.tasks, task];\n      return { ...state, tasks, create: false, searchQuery: '' };\n    }\n    case 'REPLACE_TASK': {\n      const { replacedTask } = action;\n      const tasks = state.tasks.map((task) => (task.id === replacedTask.id ? replacedTask : task));\n      return { ...state, tasks, editMode: false, currentEditTask: null };\n    }\n    case 'DELETE_TASK': {\n      const { removedTask } = action;\n      const tasks = state.tasks.filter((task) => task.id !== removedTask.id);\n      return { ...state, tasks };\n    }\n    case 'TASK_EDIT_START': {\n      const { task } = action;\n      return { ...state, task, currentEditTask: task.id, editMode: true };\n    }\n    case 'TASK_EDIT_STOP': {\n      return { ...state, currentEditTask: null, editMode: false };\n    }\n    case 'COMPLETE_TASK': {\n      const { completedTask } = action;\n      const tasks = state.tasks.map((task) => {\n        if (task.id === completedTask.id) {\n          task.done = !task.done;\n          task.finishDate = task.done ? new Date().toISOString().slice(0, 10) : null;\n        }\n        return task;\n      });\n      return { ...state, tasks };\n    }\n    case 'SET_ERROR': {\n      const { error } = action;\n      return { ...state, error };\n    }\n    case 'LOADING': {\n      return { ...state, loading: false };\n    }\n    case 'SEARCH_INPUT': {\n      const { payload } = action;\n      return {\n        ...state,\n        searchQuery: payload,\n      };\n    }\n    case 'CREATE_MODE': {\n      return {\n        ...state,\n        create: true,\n      };\n    }\n    case 'CANCEL_CREATE': {\n      return {\n        ...state,\n        create: false,\n        searchQuery: '',\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\r\n\r\nfunction SearchTask({search}) {\r\n  return (\r\n      <div className=\"form-group mt-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"search task\"\r\n          className=\"form-control\"\r\n          onInput={search}\r\n        />\r\n      </div>\r\n  );\r\n}\r\nexport default SearchTask;\r\n","import React, { useReducer, useEffect } from 'react';\n// import AuthContext from '../context/AuthContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport AddTask from './AddTask';\nimport TaskTable from './TaskTable';\nimport TasksAPI from '../api/FakeTasksApi';\nimport { tasksReducer } from '../reducers';\nimport {\n  setTasks,\n  setError,\n  loadingIndicator,\n  deleteTask,\n  addTask,\n  replaceTask,\n  searchInput,\n  searchTask,\n  setCreateMode,\n  cancelCreateMode,\n  taskEditStart,\n  taskEditStop,\n  completeTask,\n} from '../actions';\n\nimport SearchTask from './SearchTask';\n\nfunction TaskList() {\n  const [state, dispatch] = useReducer(tasksReducer, undefined, tasksReducer);\n  // const { accessToken } = useContext(AuthContext);\n\n  useEffect(() => {\n    TasksAPI.getAllTasks()\n      .then((tasks) => dispatch(setTasks(tasks)))\n      .catch((error) => dispatch(setError(error)))\n      .finally(() => dispatch(loadingIndicator()));\n    TasksAPI.getTasksByFullTextSearch(state.searchQuery).then(() => {\n      dispatch(searchTask());\n    });\n  }, [state.searchQuery]);\n\n  const removeTask = (taskToRemove) => {\n    TasksAPI.removeTask(taskToRemove).then(() => dispatch(deleteTask(taskToRemove)));\n  };\n\n  const handleCreate = (task) => {\n    try {\n      TasksAPI.addTask(task).then((addedTask) => dispatch(addTask(addedTask)));\n    } catch (error) {\n      console.log('Jest błąd przy tworzeniu taska:', error);\n    }\n  };\n\n  const handleEditTask = (task) => {\n    dispatch(taskEditStart(task));\n  };\n\n  const handleDoneTask = (taskToComplete) => {\n    TasksAPI.finishTask(taskToComplete).then(() => dispatch(completeTask(taskToComplete)));\n  };\n\n  const { tasks, editMode, error, loading, create, currentEditTask } = state;\n\n  return (\n    <>\n      <div className=\"card bg-dark text-white col-{-sm|-md|-lg|-xl}\">\n        <div className=\"card-body\">\n          {create ? (\n            <AddTask addTask={handleCreate} onCancel={() => dispatch(cancelCreateMode())} />\n          ) : (\n            <>\n              <SearchTask search={(e) => dispatch(searchInput(e))} />\n              <button onClick={() => dispatch(setCreateMode())} className=\"btn btn-outline-warning\">\n                <FontAwesomeIcon icon={faPlus} />\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n      {error ? 'Nie udało się załadować :(' : null}\n      {loading ? 'taski się ładują...' : null}\n\n      <TaskTable\n        loading={loading}\n        tasks={tasks}\n        del={removeTask}\n        done={handleDoneTask}\n        edit={handleEditTask}\n        editMode={editMode}\n        currentEditTask={currentEditTask}\n        cancelEdit={() => dispatch(taskEditStop())}\n        onUpdate={(updatedTask) => {\n          const taskToUpdate = { ...state.task, ...updatedTask };\n          TasksAPI.replaceTask(taskToUpdate).then((replacedTask) =>\n            dispatch(replaceTask(replacedTask)),\n          );\n        }}\n      />\n    </>\n  );\n}\n\nexport default TaskList;\n","export const setTasks = (tasks) => ({ type: 'SET_TASKS', tasks });\nexport const addTask = (task) => ({ type: 'ADD_TASK', task });\nexport const setError = (error) => ({ type: 'SET_ERROR', error });\nexport const deleteTask = (removedTask) => ({\n  type: 'DELETE_TASK',\n  removedTask,\n});\nexport const loadingIndicator = () => ({ type: 'LOADING' });\nexport const replaceTask = (replacedTask) => ({\n  type: 'REPLACE_TASK',\n  replacedTask,\n});\nexport const searchInput = (e) => ({\n  type: 'SEARCH_INPUT',\n  payload: e.target.value.toLowerCase(),\n});\nexport const searchTask = () => ({\n  type: 'SEARCH_TASK',\n});\nexport const setCreateMode = () => ({\n  type: 'CREATE_MODE',\n});\nexport const cancelCreateMode = () => ({\n  type: 'CANCEL_CREATE',\n});\nexport const taskEditStart = (task) => ({\n  type: 'TASK_EDIT_START',\n  task,\n});\nexport const taskEditStop = () => ({\n  type: 'TASK_EDIT_STOP',\n});\nexport const completeTask = (completedTask) => ({\n  type: 'COMPLETE_TASK',\n  completedTask,\n});\n","import React from 'react';\r\n\r\nfunction Header({ children }) {\r\n  if (children.length < 1) {\r\n    throw new Error('Header has to have at least one child!');\r\n  }\r\n  return <header className=\"card bg-warning text-white\">{children}</header>;\r\n}\r\n\r\nexport default Header;\r\n","import React, { useContext } from 'react';\nimport jwt from 'jsonwebtoken';\nimport AuthContext from '../context/AuthContext';\n\nfunction getUserEmail(token) {\n  const decodedToken = jwt.decode(token);\n  return decodedToken.email;\n}\n\nfunction UserGreeting({ onLogout }) {\n  const { accessToken } = useContext(AuthContext);\n  return (\n    <>\n      {accessToken ? (\n        <>\n          <div className=\"card-body\">\n            <h3 className=\"card-title text-center\">TASKS LIST</h3>\n            <p className=\"card-text text-right\">\n              Witaj {getUserEmail(accessToken)} /\n              <a href=\"#\" className=\"\" onClick={onLogout}>\n                wyloguj się\n              </a>\n            </p>\n          </div>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nexport default UserGreeting;\n","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport Header from './Header';\r\nimport UserGreeting from './UserGreeting';\r\n\r\nfunction AuthApp({ onLogout }) {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <UserGreeting onLogout={onLogout} />\r\n      </Header>\r\n      <TaskList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthApp;\r\n"],"sourceRoot":""}