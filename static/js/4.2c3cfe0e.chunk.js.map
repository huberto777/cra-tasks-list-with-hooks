{"version":3,"sources":["components/AddTask.js","components/TaskTableRow.js","components/TaskTable.js","components/EditTask.js","components/api/AxiosTasksApi.js","reducers.js","actions.js","components/SearchTask.js","components/TaskList.js","components/Header.js","components/UserGreeting.js","components/AuthApp.js"],"names":["validate","values","errors","name","length","AddTask","addTask","minDate","Date","toISOString","slice","formik","useFormik","initialValues","priority","date","done","finishDate","onSubmit","resetForm","handleSubmit","className","id","type","onChange","handleChange","onBlur","handleBlur","value","placeholder","htmlFor","TaskTableRow","props","task","isFinished","style","textDecoration","backgroundColor","color","index","onClick","onDone","disabled","onEdit","onDelete","TaskTable","tasks","map","key","delete","edit","EditTask","update","BASE_URL","AxiosTasksAPI","getAllTasks","accessToken","a","axios","get","headers","Authorization","response","data","taskToAdd","post","addedTask","replaceTask","taskToReplace","Error","put","replacedTask","finishTask","taskToFinish","patch","completedTask","removeTask","taskToRemove","getTasksByFullTextSearch","searchQuery","initialState","loading","error","tasksReducer","state","action","removedTask","filter","payload","toLowerCase","includes","setTasks","setError","deleteTask","loadingIndicator","searchInput","e","target","searchTask","SearchTask","search","onInput","TaskList","useReducer","undefined","dispatch","useContext","AuthContext","useEffect","TasksAPI","then","catch","finally","handleEditTask","updatedTask","taskToUpdate","console","log","taskToComplete","Header","children","UserGreeting","token","onLogout","jwt","decode","email","href","AuthApp"],"mappings":"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","file":"static/js/4.2c3cfe0e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.name) {\r\n    errors.name = \"Required\";\r\n  } else if (values.name.length < 3) {\r\n    errors.name = \"Must have min 3 characters\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst AddTask = ({ addTask }) => {\r\n  const minDate = new Date().toISOString().slice(0, 10);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      priority: \"\",\r\n      date: minDate,\r\n      done: false,\r\n      finishDate: null,\r\n    },\r\n    validate,\r\n    onSubmit: (values, { resetForm }) => {\r\n      addTask(values);\r\n      resetForm();\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.name}\r\n            className=\"form-control\"\r\n            placeholder=\"add task\"\r\n          />\r\n          {formik.errors.name ? (\r\n            <div className=\"alert alert-danger\">{formik.errors.name}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-group form-check\">\r\n          <input\r\n            id=\"priority\"\r\n            name=\"priority\"\r\n            type=\"checkbox\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.priority}\r\n            className=\"form-check-input\"\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"priority\">\r\n            priorytet\r\n          </label>\r\n        </div>\r\n        <button className=\"btn btn-block btn-outline-warning\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\n\r\nfunction TaskTableRow(props) {\r\n  const { name, done, finishDate, priority, date } = props.task;\r\n  const isFinished = done;\r\n  let style = {};\r\n  if (done) {\r\n    style.textDecoration = \"line-through\";\r\n    style.backgroundColor = \"orange\";\r\n  }\r\n  if (priority) {\r\n    style.color = \"red\";\r\n  }\r\n  return (\r\n    <tr style={style}>\r\n      <td>{props.index + 1}</td>\r\n      <td>{name}</td>\r\n      <td>{date}</td>\r\n      <td>{finishDate}</td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-sm btn-outline-primary\"\r\n          onClick={props.onDone}\r\n          disabled={isFinished}\r\n        >\r\n          finish\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-sm btn-outline-secondary\"\r\n          onClick={props.onEdit}\r\n          disabled={isFinished}\r\n        >\r\n          edit\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-sm btn-outline-danger\"\r\n          onClick={props.onDelete}\r\n        >\r\n          delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\nexport default TaskTableRow;\r\n","import React from \"react\";\r\nimport TaskTableRow from \"./TaskTableRow\";\r\n\r\nfunction TaskTable(props) {\r\n  return (\r\n    <table className=\"table table-info table-hover table-striped table-responsive{-sm|-md|-lg|-xl}\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>task name</th>\r\n          <th>add task</th>\r\n          <th>finish date</th>\r\n          <th>ok</th>\r\n          <th>edit</th>\r\n          <th>del</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.tasks.map((task, index) => (\r\n          <TaskTableRow\r\n            key={task.id}\r\n            index={index}\r\n            task={task}\r\n            onDelete={() => props.delete(task)}\r\n            onDone={() => props.done(task)}\r\n            onEdit={() => props.edit(task)}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TaskTable;\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.name) {\r\n    errors.name = \"Required\";\r\n  } else if (values.name.length < 3) {\r\n    errors.name = \"Must have min 3 characters\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst EditTask = ({ update, edit, task }) => {\r\n  const { name } = task;\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name,\r\n    },\r\n    validate,\r\n    onSubmit: ({ name }) => {\r\n      update({ ...task, name });\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"jumbotron bg-dark text-white\">\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.name}\r\n            className=\"form-control\"\r\n          />\r\n          {formik.errors.name ? (\r\n            <div className=\"alert alert-danger\">{formik.errors.name}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-block btn-outline-warning\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-block btn-outline-danger\" onClick={edit}>\r\n            cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:5000/tasks\";\r\nconst AxiosTasksAPI = {\r\n  getAllTasks: async function (accessToken) {\r\n    const response = await axios.get(`${BASE_URL}`, {\r\n      headers: { Authorization: `Bearer ${accessToken}` },\r\n    });\r\n    const tasks = response.data;\r\n    return tasks;\r\n  },\r\n  addTask: async function (taskToAdd, accessToken) {\r\n    const response = await axios.post(`${BASE_URL}`, taskToAdd, {\r\n      headers: { Authorization: `Bearer ${accessToken}` },\r\n    });\r\n    const addedTask = response.data;\r\n    return addedTask;\r\n  },\r\n  replaceTask: async function (taskToReplace, accessToken) {\r\n    if (!taskToReplace.id) {\r\n      throw new Error(\"task has to have an id to be updated\");\r\n    }\r\n    const response = await axios.put(\r\n      `${BASE_URL}/${taskToReplace.id}`,\r\n      taskToReplace,\r\n      {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      }\r\n    );\r\n    const replacedTask = await response.data;\r\n    return replacedTask;\r\n  },\r\n\r\n  finishTask: async function (taskToFinish, accessToken) {\r\n    if (!taskToFinish.id) {\r\n      throw new Error(\"task has to have an id to be updated\");\r\n    }\r\n\r\n    const response = await axios.patch(\r\n      `${BASE_URL}/${taskToFinish.id}`,\r\n      { done: true, finishDate: new Date().toISOString().slice(0, 10) },\r\n      {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      }\r\n    );\r\n    const completedTask = response.data;\r\n    return completedTask;\r\n  },\r\n  removeTask: async function (taskToRemove, accessToken) {\r\n    if (!taskToRemove.id) {\r\n      throw new Error(\"task has to have an id to be deleted\");\r\n    }\r\n    await axios.delete(`${BASE_URL}/${taskToRemove.id}`, {\r\n      headers: { Authorization: `Bearer ${accessToken}` },\r\n    });\r\n  },\r\n  // Full-text search Add q GET /posts?q=internet -> dokumentacja json-server\r\n  getTasksByFullTextSearch: async function (searchQuery, accessToken) {\r\n    const response = await axios.get(`${BASE_URL}/?q=${searchQuery}`, {\r\n      headers: { Authorization: `Bearer ${accessToken}` },\r\n    });\r\n    const tasks = response.data;\r\n    return tasks;\r\n  },\r\n};\r\n\r\nexport default AxiosTasksAPI;\r\n","const initialState = {\r\n  tasks: [],\r\n  searchQuery: \"\",\r\n  edit: false,\r\n  loading: true,\r\n  error: null,\r\n};\r\n\r\nexport const tasksReducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case \"SET_TASKS\": {\r\n      const { tasks } = action;\r\n      return { ...state, tasks };\r\n    }\r\n    case \"ADD_TASK\": {\r\n      const { task } = action;\r\n      const tasks = [...state.tasks, task];\r\n      return { ...state, tasks };\r\n    }\r\n    case \"REPLACE_TASK\": {\r\n      const { replacedTask } = action;\r\n      const tasks = state.tasks.map((task) =>\r\n        task.id === replacedTask.id ? replacedTask : task\r\n      );\r\n      return { ...state, tasks, edit: false };\r\n    }\r\n    case \"DELETE_TASK\": {\r\n      const { removedTask } = action;\r\n      const tasks = state.tasks.filter((task) => task.id !== removedTask.id);\r\n      return { ...state, tasks };\r\n    }\r\n    case \"TASK_EDIT_START\": {\r\n      const task = { action };\r\n      return { ...state, task, edit: !state.edit };\r\n    }\r\n    case \"COMPLETE_TASK\": {\r\n      const { completedTask } = action;\r\n      const tasks = state.tasks.map((task) => {\r\n        if (task.id === completedTask.id) {\r\n          task.done = !task.done;\r\n          task.finishDate = task.done\r\n            ? new Date().toISOString().slice(0, 10)\r\n            : null;\r\n        }\r\n        return task;\r\n      });\r\n      return { ...state, tasks };\r\n    }\r\n    case \"SET_ERROR\": {\r\n      const { error } = action;\r\n      return { ...state, error };\r\n    }\r\n    case \"LOADING\": {\r\n      return { ...state, loading: false };\r\n    }\r\n    case \"SEARCH_INPUT\": {\r\n      const { payload } = action;\r\n      return {\r\n        ...state,\r\n        searchQuery: payload,\r\n      };\r\n    }\r\n    case \"SEARCH_TASK\": {\r\n      const tasks = state.tasks.filter(({ name }) =>\r\n        name.toLowerCase().includes(state.searchQuery)\r\n      );\r\n      return { ...state, tasks };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const setTasks = (tasks) => ({ type: \"SET_TASKS\", tasks });\r\nexport const addTask = (task) => ({ type: \"ADD_TASK\", task });\r\nexport const setError = (error) => ({ type: \"SET_ERROR\", error });\r\nexport const deleteTask = (removedTask) => ({\r\n  type: \"DELETE_TASK\",\r\n  removedTask,\r\n});\r\nexport const loadingIndicator = () => ({ type: \"LOADING\" });\r\nexport const replaceTask = (replacedTask) => ({\r\n  type: \"REPLACE_TASK\",\r\n  replacedTask,\r\n});\r\nexport const searchInput = (e) => ({\r\n  type: \"SEARCH_INPUT\",\r\n  payload: e.target.value.toLowerCase(),\r\n});\r\nexport const searchTask = () => ({\r\n  type: \"SEARCH_TASK\",\r\n});\r\n","import React from \"react\";\r\n\r\nfunction SearchTask({search}) {\r\n  return (\r\n      <div className=\"form-group mt-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"search task\"\r\n          className=\"form-control\"\r\n          onInput={search}\r\n        />\r\n      </div>\r\n  );\r\n}\r\nexport default SearchTask;\r\n","import React, { useReducer, useEffect, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport AddTask from \"./AddTask\";\r\nimport TaskTable from \"./TaskTable\";\r\nimport EditTask from \"./EditTask\";\r\nimport TasksAPI from \"./api/AxiosTasksApi\";\r\nimport { tasksReducer } from \"../reducers\";\r\nimport {\r\n  setTasks,\r\n  setError,\r\n  loadingIndicator,\r\n  deleteTask,\r\n  addTask,\r\n  replaceTask,\r\n  searchInput,\r\n  searchTask,\r\n} from \"../actions\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport SearchTask from \"./SearchTask\";\r\n\r\nfunction TaskList() {\r\n  const [state, dispatch] = useReducer(tasksReducer, undefined, tasksReducer);\r\n  const { accessToken } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    TasksAPI.getAllTasks(accessToken)\r\n      .then((tasks) => dispatch(setTasks(tasks)))\r\n      .catch((error) => dispatch(setError(error)))\r\n      .finally(() => dispatch(loadingIndicator()));\r\n    TasksAPI.getTasksByFullTextSearch(state.searchQuery, accessToken).then(\r\n      () => {\r\n        dispatch(searchTask());\r\n      }\r\n    );\r\n  }, [accessToken, state.searchQuery]);\r\n\r\n  const removeTask = (taskToRemove) => {\r\n    TasksAPI.removeTask(taskToRemove, accessToken).then(() =>\r\n      dispatch(deleteTask(taskToRemove))\r\n    );\r\n  };\r\n\r\n  const handleCreate = (task) => {\r\n    try {\r\n      TasksAPI.addTask(task, accessToken).then((addedTask) =>\r\n        dispatch(addTask(addedTask))\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Jest błąd przy tworzeniu taska:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditTask = (task) => {\r\n    dispatch({ type: \"TASK_EDIT_START\", task });\r\n  };\r\n\r\n  const handleDoneTask = (taskToComplete) => {\r\n    TasksAPI.finishTask(taskToComplete, accessToken).then(() =>\r\n      dispatch({ type: \"COMPLETE_TASK\", completedTask: taskToComplete })\r\n    );\r\n  };\r\n\r\n  const { tasks, edit, error, loading } = state;\r\n  return (\r\n    <>\r\n      {edit ? (\r\n        <EditTask\r\n          task={state.task.action.task}\r\n          update={(updatedTask) => {\r\n            const taskToUpdate = { ...state.task, ...updatedTask };\r\n            TasksAPI.replaceTask(\r\n              taskToUpdate,\r\n              accessToken\r\n            ).then((replacedTask) => dispatch(replaceTask(replacedTask)));\r\n          }}\r\n          edit={handleEditTask}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className=\"jumbotron bg-dark text-white col-{-sm|-md|-lg|-xl}\">\r\n            <AddTask addTask={handleCreate} />\r\n            <SearchTask search={(e) => dispatch(searchInput(e))} />\r\n          </div>\r\n          {error ? \"Nie udało się załadować :(\" : null}\r\n          {loading ? \"taski się ładują...\" : null}\r\n\r\n          <TaskTable\r\n            loading={loading}\r\n            tasks={tasks}\r\n            delete={removeTask}\r\n            done={handleDoneTask}\r\n            edit={handleEditTask}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\n\r\nfunction Header({ children }) {\r\n  if (children.length < 1) {\r\n    throw new Error(\"Header has to have at least one child!\");\r\n  }\r\n  return <header className=\"card bg-warning text-white\">{children}</header>;\r\n}\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nfunction UserGreeting({ onLogout }) {\r\n  const { accessToken } = useContext(AuthContext);\r\n  return (\r\n    <>\r\n      {accessToken ? (\r\n        <>\r\n          <div className=\"card-body\">\r\n            <h3 className=\"card-title\">TASKS LIST</h3>\r\n            <p className=\"card-text\">\r\n              Witaj {getUserEmail(accessToken)} /\r\n              <a href=\"#\" className=\"\" onClick={onLogout}>\r\n                wyloguj się\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserGreeting;\r\n\r\nfunction getUserEmail(token) {\r\n  const decodedToken = jwt.decode(token);\r\n  return decodedToken.email;\r\n}\r\n","import React from \"react\";\r\nimport TaskList from \"./TaskList\";\r\nimport Header from \"./Header\";\r\nimport UserGreeting from \"./UserGreeting\";\r\n\r\nfunction AuthApp({ onLogout }) {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <UserGreeting onLogout={onLogout} />\r\n      </Header>\r\n      <TaskList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthApp;\r\n"],"sourceRoot":""}