{"version":3,"sources":["components/AddTask.js","components/TaskTableRow.js","components/TaskTable.js","components/EditTask.js","api/FakeTasksApi.js","reducers/index.js","components/SearchTask.js","components/TaskList.js","actions/index.js","components/Header.js","components/UserGreeting.js","components/AuthApp.js"],"names":["validate","values","errors","name","length","AddTask","addTask","onCancel","minDate","Date","toISOString","slice","formik","useFormik","initialValues","priority","date","done","finishDate","onSubmit","resetForm","handleSubmit","className","id","type","onChange","handleChange","onBlur","handleBlur","value","placeholder","htmlFor","onClick","TaskTableRow","index","task","onDone","onEdit","onDelete","isFinished","style","textDecoration","backgroundColor","color","disabled","icon","faEdit","faTrash","TaskTable","tasks","del","edit","map","key","EditTask","update","findIndexByAnId","result","findIndex","Error","FakeTasksApi","getAllTasks","wait","taskToAdd","addedTask","uuidv4","push","replaceTask","taskToReplace","replacedTask","finishTask","taskToFinish","finishedTask","removeTask","taskToRemove","splice","getTasksByFullTextSearch","searchQuery","initialState","loading","error","currentTaskId","create","tasksReducer","state","action","filter","toLowerCase","includes","removedTask","completedTask","payload","SearchTask","search","onInput","TaskList","useReducer","undefined","dispatch","useEffect","TasksAPI","then","setTasks","catch","setError","finally","handleEditTask","updatedTask","taskToUpdate","console","log","e","target","searchInput","faPlus","taskToComplete","Header","children","UserGreeting","token","onLogout","accessToken","useContext","AuthContext","jwt","decode","email","href","AuthApp"],"mappings":"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","file":"static/js/4.3248e3c2.chunk.js","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Required';\n  } else if (values.name.length < 3) {\n    errors.name = 'Must have min 3 characters';\n  }\n\n  return errors;\n};\n\nconst AddTask = ({ addTask, onCancel }) => {\n  const minDate = new Date().toISOString().slice(0, 10);\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      priority: false,\n      date: minDate,\n      done: false,\n      finishDate: null,\n    },\n    validate,\n    onSubmit: (values, { resetForm }) => {\n      addTask(values);\n      resetForm();\n    },\n  });\n  return (\n    <>\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"form-group\">\n          <input\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.name}\n            className=\"form-control\"\n            placeholder=\"add task\"\n          />\n          {formik.errors.name ? (\n            <div className=\"alert alert-danger\">{formik.errors.name}</div>\n          ) : null}\n        </div>\n        <div className=\"form-group form-check\">\n          <input\n            id=\"priority\"\n            name=\"priority\"\n            type=\"checkbox\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.priority}\n            className=\"form-check-input\"\n          />\n          <label className=\"form-check-label\" htmlFor=\"priority\">\n            priorytet\n          </label>\n        </div>\n        <button className=\"btn btn-block btn-outline-warning\" type=\"submit\">\n          Dodaj\n        </button>\n        <button className=\"btn btn-block btn-outline-danger\" onClick={onCancel}>\n          Anuluj\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTask;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\n\nfunction TaskTableRow({ index, task, onDone, onEdit, onDelete }) {\n  const { name, done, finishDate, priority, date } = task;\n  const isFinished = done;\n  const style = {};\n  if (done) {\n    style.textDecoration = 'line-through';\n    style.backgroundColor = 'orange';\n  }\n  if (priority) {\n    style.color = 'red';\n  }\n  return (\n    <tr style={style}>\n      {/* {onEdit ? 'hvihi' : ''} */}\n      <td>{index + 1}</td>\n      <td onClick={onDone}>{name}</td>\n      <td>{!done ? date : finishDate}</td>\n      <td>\n        <button\n          className=\"btn btn-sm btn-outline-secondary mr-1\"\n          onClick={onEdit}\n          disabled={isFinished}\n        >\n          <FontAwesomeIcon icon={faEdit} />\n        </button>\n        <button className=\"btn btn-sm btn-outline-danger\" onClick={onDelete}>\n          <FontAwesomeIcon icon={faTrash} />\n        </button>\n      </td>\n    </tr>\n  );\n}\nexport default TaskTableRow;\n","import React from 'react';\nimport TaskTableRow from './TaskTableRow';\n\nfunction TaskTable({ tasks, del, done, edit }) {\n  return (\n    <table className=\"table table-info table-hover table-striped table-responsive{-sm|-md|-lg|-xl}\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>task name</th>\n          <th>date</th>\n          <th>edit / del</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tasks.map((task, index) => (\n          <TaskTableRow\n            key={task.id}\n            index={index}\n            task={task}\n            onDelete={() => del(task)}\n            onDone={() => done(task)}\n            onEdit={() => edit(task)}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TaskTable;\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.name) {\r\n    errors.name = 'Required';\r\n  } else if (values.name.length < 3) {\r\n    errors.name = 'Must have min 3 characters';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst EditTask = ({ update, edit, task }) => {\r\n  const { name } = task;\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name,\r\n    },\r\n    validate,\r\n    onSubmit: ({ name }) => {\r\n      update({ ...task, name });\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"jumbotron bg-dark text-white\">\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.name}\r\n            className=\"form-control\"\r\n          />\r\n          {formik.errors.name ? (\r\n            <div className=\"alert alert-danger\">{formik.errors.name}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-block btn-outline-warning\" type=\"submit\">\r\n            Edytuj\r\n          </button>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-block btn-outline-danger\" onClick={edit}>\r\n            cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import { v4 as uuidv4 } from 'uuid';\nimport { wait } from './wait';\n\nconst tasks = [\n  {\n    id: 1,\n    date: '2020-02-03',\n    done: false,\n    finishDate: null,\n    name: 'nauczyć się js es 6',\n    priority: false,\n  },\n  {\n    id: 2,\n    date: '2020-02-04',\n    done: false,\n    finishDate: null,\n    name: 'nauczyć się biblioteki axios',\n    priority: true,\n  },\n  {\n    id: 3,\n    date: '2020-03-03',\n    done: false,\n    finishDate: null,\n    name: 'zainstalować linuxa',\n    priority: false,\n  },\n  {\n    id: 4,\n    date: '2020-04-09',\n    done: false,\n    finishDate: null,\n    name: 'zrobić api w laravelu',\n    priority: false,\n  },\n];\n\nfunction findIndexByAnId(id) {\n  const result = tasks.findIndex((task) => task.id === id);\n  if (result < 0) {\n    throw new Error('task o podanym id nie istnieje');\n  }\n  return result;\n}\n\nconst FakeTasksApi = {\n  async getAllTasks() {\n    await wait(200);\n    return [...tasks];\n  },\n  async addTask(taskToAdd) {\n    await wait(200);\n    const addedTask = { id: uuidv4(), ...taskToAdd };\n    tasks.push(addedTask);\n\n    return addedTask;\n  },\n  async replaceTask(taskToReplace) {\n    await wait(200);\n    if (!taskToReplace.id) {\n      throw new Error('task has to have an id to be updated');\n    }\n    const index = findIndexByAnId(taskToReplace.id);\n    const replacedTask = { ...taskToReplace };\n    tasks[index] = replacedTask;\n    return replacedTask;\n  },\n  async finishTask(taskToFinish) {\n    await wait(200);\n    if (!taskToFinish.id) {\n      throw new Error('task has to have an id to be finished');\n    }\n\n    const finishedTask = {\n      ...taskToFinish,\n      done: !taskToFinish.done,\n      finishDate: taskToFinish.done ? new Date().toISOString().slice(0, 10) : null,\n    };\n    const index = findIndexByAnId(taskToFinish.id);\n    tasks[index] = finishedTask;\n    return finishedTask;\n  },\n  async removeTask(taskToRemove) {\n    await wait(200);\n    if (!taskToRemove.id) {\n      throw new Error('task has to have an id to be deleted');\n    }\n\n    const index = findIndexByAnId(taskToRemove.id);\n    tasks.splice(index, 1);\n  },\n  async getTasksByFullTextSearch(searchQuery) {\n    await wait(200);\n    return searchQuery;\n  },\n};\n\nexport default FakeTasksApi;\n","const initialState = {\n  tasks: [],\n  searchQuery: '',\n  edit: false,\n  loading: true,\n  error: null,\n  currentTaskId: null,\n  create: false,\n};\n\nexport const tasksReducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case 'SET_TASKS': {\n      const { tasks } = action;\n      return { ...state, tasks };\n    }\n    case 'SEARCH_TASK': {\n      const tasks = state.tasks.filter(({ name }) =>\n        name.toLowerCase().includes(state.searchQuery),\n      );\n      return { ...state, tasks };\n    }\n    case 'ADD_TASK': {\n      const { task } = action;\n      const tasks = [...state.tasks, task];\n      return { ...state, tasks, create: false };\n    }\n    case 'REPLACE_TASK': {\n      const { replacedTask } = action;\n      const tasks = state.tasks.map((task) => (task.id === replacedTask.id ? replacedTask : task));\n      return { ...state, tasks, edit: false };\n    }\n    case 'DELETE_TASK': {\n      const { removedTask } = action;\n      const tasks = state.tasks.filter((task) => task.id !== removedTask.id);\n      return { ...state, tasks };\n    }\n    case 'TASK_EDIT_START': {\n      const task = { action };\n      return { ...state, task, edit: !state.edit };\n    }\n    case 'COMPLETE_TASK': {\n      const { completedTask } = action;\n      const tasks = state.tasks.map((task) => {\n        if (task.id === completedTask.id) {\n          task.done = !task.done;\n          task.finishDate = task.done ? new Date().toISOString().slice(0, 10) : null;\n        }\n        return task;\n      });\n      return { ...state, tasks };\n    }\n    case 'SET_ERROR': {\n      const { error } = action;\n      return { ...state, error };\n    }\n    case 'LOADING': {\n      return { ...state, loading: false };\n    }\n    case 'SEARCH_INPUT': {\n      const { payload } = action;\n      return {\n        ...state,\n        searchQuery: payload,\n      };\n    }\n    case 'CREATE_MODE': {\n      return {\n        ...state,\n        create: true,\n      };\n    }\n    case 'CANCEL_CREATE': {\n      return {\n        ...state,\n        create: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\r\n\r\nfunction SearchTask({search}) {\r\n  return (\r\n      <div className=\"form-group mt-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"search task\"\r\n          className=\"form-control\"\r\n          onInput={search}\r\n        />\r\n      </div>\r\n  );\r\n}\r\nexport default SearchTask;\r\n","import React, { useReducer, useEffect } from 'react';\n// import AuthContext from '../context/AuthContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport AddTask from './AddTask';\nimport TaskTable from './TaskTable';\nimport EditTask from './EditTask';\nimport TasksAPI from '../api/FakeTasksApi';\nimport { tasksReducer } from '../reducers';\nimport {\n  setTasks,\n  setError,\n  loadingIndicator,\n  deleteTask,\n  addTask,\n  replaceTask,\n  searchInput,\n  searchTask,\n  setCreateMode,\n  cancelCreateMode,\n} from '../actions';\n\nimport SearchTask from './SearchTask';\n\nfunction TaskList() {\n  const [state, dispatch] = useReducer(tasksReducer, undefined, tasksReducer);\n  // const { accessToken } = useContext(AuthContext);\n\n  useEffect(() => {\n    TasksAPI.getAllTasks()\n      .then((tasks) => dispatch(setTasks(tasks)))\n      .catch((error) => dispatch(setError(error)))\n      .finally(() => dispatch(loadingIndicator()));\n    TasksAPI.getTasksByFullTextSearch(state.searchQuery).then(() => {\n      dispatch(searchTask());\n    });\n  }, [state.searchQuery]);\n\n  const removeTask = (taskToRemove) => {\n    TasksAPI.removeTask(taskToRemove).then(() => dispatch(deleteTask(taskToRemove)));\n  };\n\n  const handleCreate = (task) => {\n    try {\n      TasksAPI.addTask(task).then((addedTask) => dispatch(addTask(addedTask)));\n    } catch (error) {\n      console.log('Jest błąd przy tworzeniu taska:', error);\n    }\n  };\n\n  const handleEditTask = (task) => {\n    dispatch({ type: 'TASK_EDIT_START', task });\n  };\n\n  const handleDoneTask = (taskToComplete) => {\n    TasksAPI.finishTask(taskToComplete).then(() =>\n      dispatch({ type: 'COMPLETE_TASK', completedTask: taskToComplete }),\n    );\n  };\n\n  const { tasks, edit, error, loading, create } = state;\n\n  return (\n    <>\n      {edit ? (\n        <EditTask\n          task={state.task.action.task}\n          update={(updatedTask) => {\n            const taskToUpdate = { ...state.task, ...updatedTask };\n            TasksAPI.replaceTask(taskToUpdate).then((replacedTask) =>\n              dispatch(replaceTask(replacedTask)),\n            );\n          }}\n          edit={handleEditTask}\n        />\n      ) : (\n        <>\n          <div className=\"card bg-dark text-white col-{-sm|-md|-lg|-xl}\">\n            <div className=\"card-body\">\n              {create ? (\n                <AddTask addTask={handleCreate} onCancel={() => dispatch(cancelCreateMode())} />\n              ) : (\n                <>\n                  <SearchTask search={(e) => dispatch(searchInput(e))} />\n                  <button\n                    onClick={() => dispatch(setCreateMode())}\n                    className=\"btn btn-outline-warning\"\n                  >\n                    <FontAwesomeIcon icon={faPlus} />\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n          {error ? 'Nie udało się załadować :(' : null}\n          {loading ? 'taski się ładują...' : null}\n\n          <TaskTable\n            loading={loading}\n            tasks={tasks}\n            del={removeTask}\n            done={handleDoneTask}\n            edit={handleEditTask}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default TaskList;\n","export const setTasks = (tasks) => ({ type: 'SET_TASKS', tasks });\nexport const addTask = (task) => ({ type: 'ADD_TASK', task });\nexport const setError = (error) => ({ type: 'SET_ERROR', error });\nexport const deleteTask = (removedTask) => ({\n  type: 'DELETE_TASK',\n  removedTask,\n});\nexport const loadingIndicator = () => ({ type: 'LOADING' });\nexport const replaceTask = (replacedTask) => ({\n  type: 'REPLACE_TASK',\n  replacedTask,\n});\nexport const searchInput = (e) => ({\n  type: 'SEARCH_INPUT',\n  payload: e.target.value.toLowerCase(),\n});\nexport const searchTask = () => ({\n  type: 'SEARCH_TASK',\n});\nexport const setCreateMode = () => ({\n  type: 'CREATE_MODE',\n});\nexport const cancelCreateMode = () => ({\n  type: 'CANCEL_CREATE',\n});\n","import React from 'react';\r\n\r\nfunction Header({ children }) {\r\n  if (children.length < 1) {\r\n    throw new Error('Header has to have at least one child!');\r\n  }\r\n  return <header className=\"card bg-warning text-white\">{children}</header>;\r\n}\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nfunction UserGreeting({ onLogout }) {\r\n  const { accessToken } = useContext(AuthContext);\r\n  return (\r\n    <>\r\n      {accessToken ? (\r\n        <>\r\n          <div className=\"card-body\">\r\n            <h3 className=\"card-title text-center\">TASKS LIST</h3>\r\n            <p className=\"card-text text-right\">\r\n              Witaj {getUserEmail(accessToken)} /\r\n              <a href=\"#\" className=\"\" onClick={onLogout}>\r\n                wyloguj się\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserGreeting;\r\n\r\nfunction getUserEmail(token) {\r\n  const decodedToken = jwt.decode(token);\r\n  return decodedToken.email;\r\n}\r\n","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport Header from './Header';\r\nimport UserGreeting from './UserGreeting';\r\n\r\nfunction AuthApp({ onLogout }) {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <UserGreeting onLogout={onLogout} />\r\n      </Header>\r\n      <TaskList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthApp;\r\n"],"sourceRoot":""}