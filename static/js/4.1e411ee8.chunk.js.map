{"version":3,"sources":["components/AddTask.js","components/TaskTableRow.js","components/TaskTable.js","components/EditTask.js","api/FakeTasksApi.js","reducers/index.js","components/SearchTask.js","components/TaskList.js","actions/index.js","components/Header.js","components/UserGreeting.js","components/AuthApp.js"],"names":["validate","values","errors","name","length","AddTask","addTask","minDate","Date","toISOString","slice","formik","useFormik","initialValues","priority","date","done","finishDate","onSubmit","resetForm","handleSubmit","className","id","type","onChange","handleChange","onBlur","handleBlur","value","placeholder","htmlFor","TaskTableRow","index","task","onDone","onEdit","onDelete","isFinished","style","textDecoration","backgroundColor","color","onClick","disabled","icon","faEdit","faTrash","TaskTable","tasks","del","edit","map","key","EditTask","update","findIndexByAnId","result","findIndex","Error","FakeTasksApi","getAllTasks","wait","taskToAdd","addedTask","uuidv4","push","replaceTask","taskToReplace","replacedTask","finishTask","taskToFinish","finishedTask","removeTask","taskToRemove","splice","getTasksByFullTextSearch","searchQuery","initialState","loading","error","currentTaskId","tasksReducer","state","action","filter","toLowerCase","includes","removedTask","completedTask","payload","SearchTask","search","onInput","TaskList","useReducer","undefined","dispatch","useEffect","TasksAPI","then","setTasks","catch","setError","finally","handleEditTask","updatedTask","taskToUpdate","e","target","searchInput","console","log","taskToComplete","Header","children","UserGreeting","token","onLogout","accessToken","useContext","AuthContext","jwt","decode","email","href","AuthApp"],"mappings":"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","file":"static/js/4.1e411ee8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useFormik } from 'formik';\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.name) {\r\n    errors.name = 'Required';\r\n  } else if (values.name.length < 3) {\r\n    errors.name = 'Must have min 3 characters';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst AddTask = ({ addTask }) => {\r\n  const minDate = new Date().toISOString().slice(0, 10);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      priority: '',\r\n      date: minDate,\r\n      done: false,\r\n      finishDate: null,\r\n    },\r\n    validate,\r\n    onSubmit: (values, { resetForm }) => {\r\n      addTask(values);\r\n      resetForm();\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.name}\r\n            className=\"form-control\"\r\n            placeholder=\"add task\"\r\n          />\r\n          {formik.errors.name ? (\r\n            <div className=\"alert alert-danger\">{formik.errors.name}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-group form-check\">\r\n          <input\r\n            id=\"priority\"\r\n            name=\"priority\"\r\n            type=\"checkbox\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.priority}\r\n            className=\"form-check-input\"\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"priority\">\r\n            priorytet\r\n          </label>\r\n        </div>\r\n        <button className=\"btn btn-block btn-outline-warning\" type=\"submit\">\r\n          Dodaj\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\n\nfunction TaskTableRow({ index, task, onDone, onEdit, onDelete }) {\n  const { name, done, finishDate, priority, date } = task;\n  const isFinished = done;\n  const style = {};\n  if (done) {\n    style.textDecoration = 'line-through';\n    style.backgroundColor = 'orange';\n  }\n  if (priority) {\n    style.color = 'red';\n  }\n  return (\n    <tr style={style}>\n      {/* {onEdit ? 'hvihi' : ''} */}\n      <td>{index + 1}</td>\n      <td onClick={onDone}>{name}</td>\n      <td>{!done ? date : finishDate}</td>\n      <td>\n        <button\n          className=\"btn btn-sm btn-outline-secondary mr-1\"\n          onClick={onEdit}\n          disabled={isFinished}\n        >\n          <FontAwesomeIcon icon={faEdit} />\n        </button>\n        <button className=\"btn btn-sm btn-outline-danger\" onClick={onDelete}>\n          <FontAwesomeIcon icon={faTrash} />\n        </button>\n      </td>\n    </tr>\n  );\n}\nexport default TaskTableRow;\n","import React from 'react';\nimport TaskTableRow from './TaskTableRow';\n\nfunction TaskTable({ tasks, del, done, edit }) {\n  return (\n    <table className=\"table table-info table-hover table-striped table-responsive{-sm|-md|-lg|-xl}\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>task name</th>\n          <th>date</th>\n          <th>edit / del</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tasks.map((task, index) => (\n          <TaskTableRow\n            key={task.id}\n            index={index}\n            task={task}\n            onDelete={() => del(task)}\n            onDone={() => done(task)}\n            onEdit={() => edit(task)}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TaskTable;\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.name) {\r\n    errors.name = 'Required';\r\n  } else if (values.name.length < 3) {\r\n    errors.name = 'Must have min 3 characters';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst EditTask = ({ update, edit, task }) => {\r\n  const { name } = task;\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name,\r\n    },\r\n    validate,\r\n    onSubmit: ({ name }) => {\r\n      update({ ...task, name });\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"jumbotron bg-dark text-white\">\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.name}\r\n            className=\"form-control\"\r\n          />\r\n          {formik.errors.name ? (\r\n            <div className=\"alert alert-danger\">{formik.errors.name}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-block btn-outline-warning\" type=\"submit\">\r\n            Edytuj\r\n          </button>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-block btn-outline-danger\" onClick={edit}>\r\n            cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import { v4 as uuidv4 } from 'uuid';\nimport { wait } from './wait';\n\nconst tasks = [\n  {\n    id: 1,\n    date: '2020-02-03',\n    done: false,\n    finishDate: null,\n    name: 'nauczyć się js es 6',\n    priority: false,\n  },\n  {\n    id: 2,\n    date: '2020-02-04',\n    done: false,\n    finishDate: null,\n    name: 'nauczyć się biblioteki axios',\n    priority: true,\n  },\n  {\n    id: 3,\n    date: '2020-03-03',\n    done: false,\n    finishDate: null,\n    name: 'zainstalować linuxa',\n    priority: false,\n  },\n  {\n    id: 4,\n    date: '2020-04-09',\n    done: false,\n    finishDate: null,\n    name: 'zrobić api w laravelu',\n    priority: false,\n  },\n];\n\nfunction findIndexByAnId(id) {\n  const result = tasks.findIndex((task) => task.id === id);\n  if (result < 0) {\n    throw new Error('task o podanym id nie istnieje');\n  }\n  return result;\n}\n\nconst FakeTasksApi = {\n  async getAllTasks() {\n    await wait(200);\n    return [...tasks];\n  },\n  async addTask(taskToAdd) {\n    await wait(200);\n    const addedTask = { id: uuidv4(), ...taskToAdd };\n    tasks.push(addedTask);\n\n    return addedTask;\n  },\n  async replaceTask(taskToReplace) {\n    await wait(200);\n    if (!taskToReplace.id) {\n      throw new Error('task has to have an id to be updated');\n    }\n    const index = findIndexByAnId(taskToReplace.id);\n    const replacedTask = { ...taskToReplace };\n    tasks[index] = replacedTask;\n    return replacedTask;\n  },\n  async finishTask(taskToFinish) {\n    await wait(200);\n    if (!taskToFinish.id) {\n      throw new Error('task has to have an id to be finished');\n    }\n\n    const finishedTask = {\n      ...taskToFinish,\n      done: !taskToFinish.done,\n      finishDate: taskToFinish.done ? new Date().toISOString().slice(0, 10) : null,\n    };\n    const index = findIndexByAnId(taskToFinish.id);\n    tasks[index] = finishedTask;\n    return finishedTask;\n  },\n  async removeTask(taskToRemove) {\n    await wait(200);\n    if (!taskToRemove.id) {\n      throw new Error('task has to have an id to be deleted');\n    }\n\n    const index = findIndexByAnId(taskToRemove.id);\n    tasks.splice(index, 1);\n  },\n  async getTasksByFullTextSearch(searchQuery) {\n    await wait(200);\n    return searchQuery;\n  },\n};\n\nexport default FakeTasksApi;\n","const initialState = {\n  tasks: [],\n  searchQuery: '',\n  edit: false,\n  loading: true,\n  error: null,\n  currentTaskId: null,\n};\n\nexport const tasksReducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case 'SET_TASKS': {\n      const { tasks } = action;\n      return { ...state, tasks };\n    }\n    case 'SEARCH_TASK': {\n      const tasks = state.tasks.filter(({ name }) =>\n        name.toLowerCase().includes(state.searchQuery),\n      );\n      return { ...state, tasks };\n    }\n    case 'ADD_TASK': {\n      const { task } = action;\n      const tasks = [...state.tasks, task];\n      return { ...state, tasks };\n    }\n    case 'REPLACE_TASK': {\n      const { replacedTask } = action;\n      const tasks = state.tasks.map((task) => (task.id === replacedTask.id ? replacedTask : task));\n      return { ...state, tasks, edit: false };\n    }\n    case 'DELETE_TASK': {\n      const { removedTask } = action;\n      const tasks = state.tasks.filter((task) => task.id !== removedTask.id);\n      return { ...state, tasks };\n    }\n    case 'TASK_EDIT_START': {\n      const task = { action };\n      return { ...state, task, edit: !state.edit };\n    }\n    case 'COMPLETE_TASK': {\n      const { completedTask } = action;\n      const tasks = state.tasks.map((task) => {\n        if (task.id === completedTask.id) {\n          task.done = !task.done;\n          task.finishDate = task.done ? new Date().toISOString().slice(0, 10) : null;\n        }\n        return task;\n      });\n      return { ...state, tasks };\n    }\n    case 'SET_ERROR': {\n      const { error } = action;\n      return { ...state, error };\n    }\n    case 'LOADING': {\n      return { ...state, loading: false };\n    }\n    case 'SEARCH_INPUT': {\n      const { payload } = action;\n      return {\n        ...state,\n        searchQuery: payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\r\n\r\nfunction SearchTask({search}) {\r\n  return (\r\n      <div className=\"form-group mt-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"search task\"\r\n          className=\"form-control\"\r\n          onInput={search}\r\n        />\r\n      </div>\r\n  );\r\n}\r\nexport default SearchTask;\r\n","import React, { useReducer, useEffect } from 'react';\n// import AuthContext from '../context/AuthContext';\nimport AddTask from './AddTask';\nimport TaskTable from './TaskTable';\nimport EditTask from './EditTask';\nimport TasksAPI from '../api/FakeTasksApi';\nimport { tasksReducer } from '../reducers';\nimport {\n  setTasks,\n  setError,\n  loadingIndicator,\n  deleteTask,\n  addTask,\n  replaceTask,\n  searchInput,\n  searchTask,\n} from '../actions';\n\nimport SearchTask from './SearchTask';\n\nfunction TaskList() {\n  const [state, dispatch] = useReducer(tasksReducer, undefined, tasksReducer);\n  // const { accessToken } = useContext(AuthContext);\n\n  useEffect(() => {\n    TasksAPI.getAllTasks()\n      .then((tasks) => dispatch(setTasks(tasks)))\n      .catch((error) => dispatch(setError(error)))\n      .finally(() => dispatch(loadingIndicator()));\n    TasksAPI.getTasksByFullTextSearch(state.searchQuery).then(() => {\n      dispatch(searchTask());\n    });\n  }, [state.searchQuery]);\n\n  const removeTask = (taskToRemove) => {\n    TasksAPI.removeTask(taskToRemove).then(() => dispatch(deleteTask(taskToRemove)));\n  };\n\n  const handleCreate = (task) => {\n    try {\n      TasksAPI.addTask(task).then((addedTask) => dispatch(addTask(addedTask)));\n    } catch (error) {\n      console.log('Jest błąd przy tworzeniu taska:', error);\n    }\n  };\n\n  const handleEditTask = (task) => {\n    dispatch({ type: 'TASK_EDIT_START', task });\n  };\n\n  const handleDoneTask = (taskToComplete) => {\n    TasksAPI.finishTask(taskToComplete).then(() =>\n      dispatch({ type: 'COMPLETE_TASK', completedTask: taskToComplete }),\n    );\n  };\n\n  const { tasks, edit, error, loading } = state;\n\n  return (\n    <>\n      {edit ? (\n        <EditTask\n          task={state.task.action.task}\n          update={(updatedTask) => {\n            const taskToUpdate = { ...state.task, ...updatedTask };\n            TasksAPI.replaceTask(taskToUpdate).then((replacedTask) =>\n              dispatch(replaceTask(replacedTask)),\n            );\n          }}\n          edit={handleEditTask}\n        />\n      ) : (\n        <>\n          <div className=\"jumbotron bg-dark text-white col-{-sm|-md|-lg|-xl}\">\n            <SearchTask search={(e) => dispatch(searchInput(e))} />\n            <AddTask addTask={handleCreate} />\n          </div>\n          {error ? 'Nie udało się załadować :(' : null}\n          {loading ? 'taski się ładują...' : null}\n\n          <TaskTable\n            loading={loading}\n            tasks={tasks}\n            del={removeTask}\n            done={handleDoneTask}\n            edit={handleEditTask}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default TaskList;\n","export const setTasks = (tasks) => ({ type: \"SET_TASKS\", tasks });\r\nexport const addTask = (task) => ({ type: \"ADD_TASK\", task });\r\nexport const setError = (error) => ({ type: \"SET_ERROR\", error });\r\nexport const deleteTask = (removedTask) => ({\r\n  type: \"DELETE_TASK\",\r\n  removedTask,\r\n});\r\nexport const loadingIndicator = () => ({ type: \"LOADING\" });\r\nexport const replaceTask = (replacedTask) => ({\r\n  type: \"REPLACE_TASK\",\r\n  replacedTask,\r\n});\r\nexport const searchInput = (e) => ({\r\n  type: \"SEARCH_INPUT\",\r\n  payload: e.target.value.toLowerCase(),\r\n});\r\nexport const searchTask = () => ({\r\n  type: \"SEARCH_TASK\",\r\n});\r\n","import React from 'react';\r\n\r\nfunction Header({ children }) {\r\n  if (children.length < 1) {\r\n    throw new Error('Header has to have at least one child!');\r\n  }\r\n  return <header className=\"card bg-warning text-white\">{children}</header>;\r\n}\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nfunction UserGreeting({ onLogout }) {\r\n  const { accessToken } = useContext(AuthContext);\r\n  return (\r\n    <>\r\n      {accessToken ? (\r\n        <>\r\n          <div className=\"card-body\">\r\n            <h3 className=\"card-title text-center\">TASKS LIST</h3>\r\n            <p className=\"card-text text-right\">\r\n              Witaj {getUserEmail(accessToken)} /\r\n              <a href=\"#\" className=\"\" onClick={onLogout}>\r\n                wyloguj się\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserGreeting;\r\n\r\nfunction getUserEmail(token) {\r\n  const decodedToken = jwt.decode(token);\r\n  return decodedToken.email;\r\n}\r\n","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport Header from './Header';\r\nimport UserGreeting from './UserGreeting';\r\n\r\nfunction AuthApp({ onLogout }) {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <UserGreeting onLogout={onLogout} />\r\n      </Header>\r\n      <TaskList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthApp;\r\n"],"sourceRoot":""}